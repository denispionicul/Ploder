[{"title":"Why use Ploder?","type":0,"sectionRef":"#","url":"/Ploder/docs/intro","content":"Why use Ploder? Ploder acts the same as normal explosions, but with more customisability and performance. Whenever you initialize and explosion, it will not auto-destroy unless specifically set. Some might like this feature, some might not. You can see the api here","keywords":""},{"title":"PloderBehavior","type":0,"sectionRef":"#","url":"/Ploder/api/PloderBehavior","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#types","content":" "},{"title":"PloderBehavior​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#PloderBehavior","content":"&lt;/&gt; interface PloderBehavior { RayCastOnly: boolean-- PloderBehavior.RayCastOnly OverlapParam: OverlapParams?-- PloderBehavior.OverlapParam RayCastParams: RaycastParams?-- PloderBehavior.RayCastParams Filter: (( Hit: BasePart , Distance: number ) → boolean)?-- PloderBehavior.Filter HumanoidOnly: boolean-- PloderBehavior.HumanoidOnly BlastPressurePercent: number?-- PloderBehavior.BlastPressurePercent AffectBlastPressureDistance: boolean-- PloderBehavior.AffectBlastPressureDistance CustomExplosion: (Folder | {ParticleEmitter })?-- PloderBehavior.CustomExplosion AutoDestroy: number?-- PloderBehavior.AutoDestroy Tags: {[string]: ( Hit: BasePart , Distance: number ) → nil}-- PloderBehavior.Tags } This is what the behavior looks like. Everything can be customised. "},{"title":"Properties​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#properties","content":" "},{"title":"RayCastOnly​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#RayCastOnly","content":"&lt;/&gt; PloderBehavior.RayCastOnly: boolean If true, will cast a ray on the hit parts. If the part is succesfully hit, the effects of the explosion will apply.  "},{"title":"OverlapParam​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#OverlapParam","content":"&lt;/&gt; PloderBehavior.OverlapParam: OverlapParams Optional OverlapParams to set for the explosion.  "},{"title":"RayCastParams​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#RayCastParams","content":"&lt;/&gt; PloderBehavior.RayCastParams: RaycastParams Optional RaycastParams to set for the RayCastOnly setting. This is not needed if PloderBehavior.RayCastOnly is set to false.  "},{"title":"Filter​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#Filter","content":"&lt;/&gt; PloderBehavior.Filter: (( Hit: BasePart , Distance: number ) → boolean) This function will be called (if it exists) and if it returns true, the hit part will be registered. If it returns false, it ill be ignored and skipped.  "},{"title":"HumanoidOnly​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#HumanoidOnly","content":"&lt;/&gt; PloderBehavior.HumanoidOnly: boolean If true, the explosion will only register HumanoidRootParts.  "},{"title":"BlastPressurePercent​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#BlastPressurePercent","content":"&lt;/&gt; PloderBehavior.BlastPressurePercent: number If this isn't nil, it will use the percentage (number of 0-1) of this value instead of Ploder.DestroyJointRadiusPercent.  "},{"title":"AffectBlastPressureDistance​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#AffectBlastPressureDistance","content":"&lt;/&gt; PloderBehavior.AffectBlastPressureDistance: boolean If true, the Ploder.BlastPressure value will decrease and be lower the more distanced a hit part is.  "},{"title":"CustomExplosion​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#CustomExplosion","content":"&lt;/&gt; PloderBehavior.CustomExplosion: Folder | {ParticleEmitter } If a Folder or an array of ParticleEmitters is set, they will be visualised when the explosion occurs. The particles inside the folder/array will need to have an attribute called &quot;Count&quot; with the value being the amount of particles to emit on explosion. The paticles will need to have an attribute callde &quot;EmitTime&quot; which will disable the particle emitter after the set attribute value.  "},{"title":"AutoDestroy​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#AutoDestroy","content":"&lt;/&gt; PloderBehavior.AutoDestroy: number If not nil, the Ploder will destroy itself after exploding and waiting for the amount of time given.  "},{"title":"Tags​","type":1,"pageTitle":"PloderBehavior","url":"/Ploder/api/PloderBehavior#Tags","content":"&lt;/&gt; PloderBehavior.Tags: {[string]: ( Hit: BasePart , Distance: number ) → nil} This is a dictionary that has a string for keys and a function as the value. Whenever ploder hits a part, it will check if it has a tag (with CollectionService) from inside this table. If it does, it will call the function associated with the tag inside the table, and will return the part and distance. "},{"title":"Ploder","type":0,"sectionRef":"#","url":"/Ploder/api/Ploder","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#types","content":" "},{"title":"Ploder​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Ploder","content":"&lt;/&gt; interface Ploder { BlastPressure: number-- Ploder.BlastPressure BlastRadius: number-- Ploder.BlastRadius DestroyJointRadiusPercent: number-- Ploder.DestroyJointRadiusPercent ExplosionType: Enum.ExplosionType-- Ploder.ExplosionType Position: Vector3 -- Ploder.Position TimeScale: number-- Ploder.TimeScale Visible: boolean-- Ploder.Visible Debug: boolean-- Ploder.Debug Hit: RBXScriptSignal | Signal&lt;BasePart, number&gt;-- Ploder.Hit } This is what the constructor returns, a table that resembles the normal Explosion. Every single property here is modifiable and can be customised to your liking. "},{"title":"Properties​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#properties","content":" "},{"title":"BlastPressure​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#BlastPressure","content":"&lt;/&gt; Ploder.BlastPressure: number The BlastPressure tells the explosion the amount of force to apply on hit parts. note The BlastPressure only applies if a part isn't anchored and not welded. The BlastPressure only applies if the Ploder.DestroyJointRadiusPercent requirement is met. The BlastPressure is the same as the Explosion BlastPressure  "},{"title":"BlastRadius​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#BlastRadius","content":"&lt;/&gt; Ploder.BlastRadius: number The BlastRadius tells the explosion the amount of range it will have. note The BlastRadius is the same as the Explosion BlastRadius  "},{"title":"DestroyJointRadiusPercent​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#DestroyJointRadiusPercent","content":"&lt;/&gt; Ploder.DestroyJointRadiusPercent: number The DestroyJointRadiusPercent tells the explosion how close a part has to be to be affected by the pressure and get its joints destroyed. It should be a value between 0-1. 1 being 100% (it will always destroy no matter the range) and 0.5 being 50% (50% near the explosion or less). note The DestroyJointRadiusPercent is the same as the Explosion DestroyJointRadiusPercent  "},{"title":"ExplosionType​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#ExplosionType","content":"&lt;/&gt; Ploder.ExplosionType: Enum.ExplosionType The ExplosionType defines if the explosion will leave craters behind on terrain. note The ExplosionType is the same as the Explosion ExplosionType  "},{"title":"Position​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Position","content":"&lt;/&gt; Ploder.Position: Vector3  The Position defines the center and origin of the explosion. note The Position is the same as the Explosion Position  "},{"title":"TimeScale​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#TimeScale","content":"&lt;/&gt; Ploder.TimeScale: number The TimeScale defines the speed of the explosion particle (if not using any custom ones). This is a value from 0-1. 1 being full speed, 0.5 being half speed and 0 being frozen. note The TimeScale is the same as the Explosion TimeScale  "},{"title":"Visible​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Visible","content":"&lt;/&gt; Ploder.Visible: boolean The Visible boolean defines if any sort of visual effect will occur on explosion. If false, no default explosion or custom explosion will be rendered. note The Visible is the same as the Explosion Visible  "},{"title":"Debug​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Debug","content":"&lt;/&gt; Ploder.Debug: boolean The Debug value is a boolean that indicates whether the explosion will be visualized by a red circle. This is used for debugging and checking the radius of the explosion.  "},{"title":"Hit​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Hit","content":"&lt;/&gt; Ploder.Hit: RBXScriptSignal | Signal&lt;BasePart, number&gt; The Hit event fires whenever a part is caught within the explosion's range. It returns the Part and Distance from center to part as parameters. note The Hit is the same as the Explosion Hit "},{"title":"Functions​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#new","content":"&lt;/&gt; Ploder.new() → Ploder Constructs and returns a new explosion.  "},{"title":"newBehavior​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#newBehavior","content":"&lt;/&gt; Ploder.newBehavior() → PloderBehavior Returns a new PloderBehavior.  "},{"title":"Explode​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Explode","content":"&lt;/&gt; Ploder:Explode( Behavior: PloderBehavior?-- The Optional behavior configuration. ) → () Fires the explosion. note The explosion will not self-destroy (unless set in the behavior).  "},{"title":"CalculateDamage​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#CalculateDamage","content":"&lt;/&gt; Ploder:CalculateDamage( Position: BasePart | Vector3 ,-- The part or position to calculate from. Damage: NumberRange -- The min and max damage. ) → number-- The calculated damage represented by a number Calculates the damage based on the distance of the position.  "},{"title":"Destroy​","type":1,"pageTitle":"Ploder","url":"/Ploder/api/Ploder#Destroy","content":"&lt;/&gt; Ploder:Destroy() → () Destroys the ploder. "}]